@using Notes2021Blazor.Shared

    <p class="notesmenu">
        <button type="button" class="link" @onclick="Done">LIsting</button>
        <button type="button" class="link" @onclick="NextBaseNote">&nbsp;&nbsp;&nbsp;Next Base</button>
        <button type="button" class="link" @onclick="PreviousBaseNote">&nbsp;&nbsp;&nbsp;Previous Base</button>
        <button type="button" class="link" @onclick="NextNote">&nbsp;&nbsp;&nbsp;Next</button>
        <button type="button" class="link" @onclick="PreviousNote">&nbsp;&nbsp;&nbsp;Previous</button>

        <button type="button" class="link" @onclick="Forward">&nbsp;&nbsp;&nbsp;Forward</button>
        <button type="button" class="link" @onclick="Copy">&nbsp;&nbsp;&nbsp;Copy</button>
        <button type="button" class="link" @onclick="mail">&nbsp;&nbsp;&nbsp;mail</button>
        <button type="button" class="link" @onclick="Mark">&nbsp;&nbsp;&nbsp;Mark</button>
        <button type="button" class="link" @onclick="Html">&nbsp;&nbsp;&nbsp;Html</button>
        <button type="button" class="link" @onclick="html">&nbsp;&nbsp;&nbsp;html</button>
        @if (@Model.myAccess.Write)
        {
            <button type="button" class="link" @onclick="NewResponse">&nbsp;&nbsp;&nbsp;New Response</button>
        }
        @if (@Model.myAccess.DeleteEdit || Model.myHeader.AuthorID == Model.myAccess.UserID)
        {
            <button type="button" class="link" @onclick="Edit">&nbsp;&nbsp;&nbsp;Edit</button>
            <button type="button" class="link" @onclick="Delete">&nbsp;&nbsp;&nbsp;Delete</button>
        }
        <button type="button" class="link" @onclick="Search">&nbsp;&nbsp;&nbsp;Search</button>
         <span>&nbsp;&nbsp;&nbsp;<button type="button" class="link" @onclick="ShowHelp">Z for HELP</button></span>
    </p>

@code {
    [Parameter] public NoteDisplayIndexModel Model { get; set; }
    [Parameter] public EventCallback<string> OnClick { get; set; }

    protected void ShowHelp()
    {
        OnClick.InvokeAsync("ShowHelp");
    }

    protected void Done()
    {
        OnClick.InvokeAsync("Done");
    }

    protected void NextBaseNote()
    {
        OnClick.InvokeAsync("NextBaseNote");
    }

    protected void PreviousBaseNote()
    {
        OnClick.InvokeAsync("PreviousBaseNote");
    }

    protected void NextNote()
    {
        OnClick.InvokeAsync("NextNote");
    }

    protected void PreviousNote()
    {
        OnClick.InvokeAsync("PreviousNote");
    }

    protected void Forward()
    {
        OnClick.InvokeAsync("Forward");
    }

    protected void Copy()
    {
        OnClick.InvokeAsync("Copy");
    }

    protected void mail()
    {
        OnClick.InvokeAsync("mail");
    }

    protected void Mark()
    {
        OnClick.InvokeAsync("Mark");
    }

    protected void Html()
    {
        OnClick.InvokeAsync("Html");
    }

    protected void html()
    {
        OnClick.InvokeAsync("html");
    }

    protected void NewResponse()
    {
        OnClick.InvokeAsync("NewResponse");
    }

    protected void Edit()
    {
        OnClick.InvokeAsync("Edit");
    }

    protected void Delete()
    {
        OnClick.InvokeAsync("Delete");
    }

    protected void Search()
    {
        OnClick.InvokeAsync("Search");
    }
}
