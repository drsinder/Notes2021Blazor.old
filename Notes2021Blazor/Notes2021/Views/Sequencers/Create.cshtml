@*/*--------------------------------------------------------------------------
    **
    **  Copyright (c) 2019, Dale Sinder
    **
    **  Name: Create.cshtml
    **
    **  Description:
    **      Create a new sequencer item
    **
    **  This program is free software: you can redistribute it and/or modify
    **  it under the terms of the GNU General Public License version 3 as
    **  published by the Free Software Foundation.
    **
    **  This program is distributed in the hope that it will be useful,
    **  but WITHOUT ANY WARRANTY; without even the implied warranty of
    **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    **  GNU General Public License version 3 for more details.
    **
    **  You should have received a copy of the GNU General Public License
    **  version 3 along with this program in file "license-gpl-3.0.txt".
    **  If not, see <http://www.gnu.org/licenses/gpl-3.0.txt>.
    **
    **--------------------------------------------------------------------------
    */*@

@model Notes2021.Models.ExportViewModel

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Sequencer</h4>
        <hr />
        <div class="form-group">
            <span class = "col-form-label col-md-2"><strong>NoteFile Name</strong></span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } }) or
               
                @Html.DropDownList("AFiles", Model.AFiles, htmlAttributes: new { @class = "form-control short-input" }) or
                @Html.DropDownList("ATitles", Model.ATitles, htmlAttributes: new { @class = "form-control short-input" })
                <script type="text/javascript">
                    var mytextbox = document.getElementById('FileName');
                    var mydropdown = document.getElementById('AFiles');
                    var mydropdown2 = document.getElementById('ATitles');

                    document.onfocus = function () { mytextbox.focus(); }

                    mydropdown.onchange = function () {
                    mytextbox.value = this.value;
                    mytextbox.focus();
                    this.form.submit();
                    }

                    mydropdown2.onchange = function () {
                        mytextbox.value = this.value;
                        mytextbox.focus();
                        this.form.submit();
                    }

                </script>


                <script type="text/javascript">
                    var mytextbox = document.getElementById('FileName');
                    document.onfocus = function () { mytextbox.focus(); }
                </script>
                @*@Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="ml-md-auto col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
