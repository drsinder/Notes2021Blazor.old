@model Notes2021Blazor.Shared.NoteAccess

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>NoteFile Access for @ViewBag.NoteFileName</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "col-form-label col-md-2" })*@
            <span class="col-form-label col-md-2">User Name</span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })<br /> or @Html.DropDownList("UserList") @ViewBag.ErrorMessage
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                <script type="text/javascript">
                                var mytextbox = document.getElementById('UserID');
                                var mydropdown = document.getElementById('UserList');

                                document.onfocus = function () { mytextbox.focus(); }

                                mydropdown.onchange = function(){
                                    mytextbox.value = this.value;
                                    mytextbox.focus();
                                }
                </script>

            </div>
            <script type="text/javascript">
                var mytextbox = document.getElementById('UserID');
                document.onfocus = function () { mytextbox.focus(); }
            </script>

        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.NoteFileID, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NoteFileID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoteFileID, "", new { @class = "text-danger" })
                </div>*@
            @Html.HiddenFor(model => model.NoteFileId)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReadAccess, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ReadAccess)
                    @Html.ValidationMessageFor(model => model.ReadAccess, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Respond, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Respond)
                    @Html.ValidationMessageFor(model => model.Respond, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Write, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Write)
                    @Html.ValidationMessageFor(model => model.Write, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SetTag, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SetTag)
                    @Html.ValidationMessageFor(model => model.SetTag, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeleteEdit, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DeleteEdit)
                    @Html.ValidationMessageFor(model => model.DeleteEdit, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ViewAccess, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ViewAccess)
                    @Html.ValidationMessageFor(model => model.ViewAccess, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EditAccess, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EditAccess)
                    @Html.ValidationMessageFor(model => model.EditAccess, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="ml-md-auto col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.NoteFileId })
</div>
